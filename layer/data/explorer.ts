import { MsgType } from '@injectivelabs/ts-types'

function breakCamelCase(str: string): string {
  return str.replace(/([a-z])([A-Z])/g, '$1 $2')
}

export const msgTypeMap = Object.fromEntries(
  Object.entries({
    [MsgType.MsgBid]: 'Bid',
    [MsgType.MsgExec]: 'Exec',
    [MsgType.MsgSend]: 'Send',
    [MsgType.MsgVote]: 'Vote',
    [MsgType.MsgBurn]: 'Burn',
    [MsgType.MsgMint]: 'Mint',
    [MsgType.MsgGrant]: 'Grant',
    [MsgType.MsgRevoke]: 'Revoke',
    [MsgType.MsgUnjail]: 'Unjail',
    [MsgType.MsgTimeout]: 'Timeout',
    [MsgType.MsgDeposit]: 'Deposit',
    [MsgType.MsgSignDoc]: 'Sign Doc',
    [MsgType.MsgDelegate]: 'Delegate',
    [MsgType.MsgTransfer]: 'Transfer',
    [MsgType.MsgWithdraw]: 'Withdraw',
    [MsgType.MsgTransmit]: 'Transmit',
    [MsgType.MsgSignData]: 'Sign Data',
    [MsgType.MsgStoreCode]: 'Store Code',
    [MsgType.MsgMultiSend]: 'Multi Send',
    [MsgType.MsgSetPayees]: 'Set Payees',
    [MsgType.MsgUndelegate]: 'Undelegate',
    [MsgType.MsgUnderwrite]: 'Underwrite',
    [MsgType.MsgSendToEth]: 'Send To Eth',
    [MsgType.MsgRecvPacket]: 'Recv Packet',
    [MsgType.MsgCreateFeed]: 'Create Feed',
    [MsgType.MsgUpdateFeed]: 'Update Feed',
    [MsgType.MsgUpdateAdmin]: 'Update Admin',
    [MsgType.MsgCreateDenom]: 'Create Denom',
    [MsgType.MsgChangeAdmin]: 'Change Admin',
    [MsgType.MsgCreateClient]: 'Create Client',
    [MsgType.MsgUpdateClient]: 'Update Client',
    [MsgType.MsgConfirmBatch]: 'Confirm Batch',
    [MsgType.MsgDepositClaim]: 'Deposit Claim',
    [MsgType.MsgRequestBatch]: 'Request Batch',
    [MsgType.MsgAuctionUpdateParams]: 'Update Params',
    [MsgType.MsgClaimVoucher]: 'Claim Voucher',
    [MsgType.MsgDepositCosmos]: 'Deposit Cosmos',
    [MsgType.MsgEditValidator]: 'Edit Validator',
    [MsgType.MsgValsetConfirm]: 'Valset Confirm',
    [MsgType.MsgWithdrawClaim]: 'Withdraw Claim',
    [MsgType.MsgRewardsOptOut]: 'Rewards Opt Out',
    [MsgType.MsgOcrUpdateParams]: 'Update Params',
    [MsgType.MsgGrantAllowance]: 'Grant Allowance',
    [MsgType.MsgSubmitProposal]: 'Submit Proposal',
    [MsgType.MsgUpdateContract]: 'Update Contract',
    [MsgType.MsgAcknowledgement]: 'Acknowledgement',
    [MsgType.MsgChannelOpenAck]: 'Channel Open Ack',
    [MsgType.MsgChannelOpenTry]: 'Channel Open Try',
    [MsgType.MsgRelayBandRates]: 'Relay Band Rates',
    [MsgType.MsgWasmxUpdateParams]: 'Update Params',
    [MsgType.MsgRevokeAllowance]: 'Revoke Allowance',
    [MsgType.MsgBeginRedelegate]: 'Begin Redelegate',
    [MsgType.MsgCreateValidator]: 'Create Validator',
    [MsgType.MsgMigrateContract]: 'Migrate Contract',
    [MsgType.MsgExecuteContract]: 'Execute Contract',
    [MsgType.MsgAcceptPayeeship]: 'Accept Payeeship',
    [MsgType.MsgOracleUpdateParams]: 'Update Params',
    [MsgType.MsgCreateNamespace]: 'Create Namespace',
    [MsgType.MsgDeleteNamespace]: 'Delete Namespace',
    [MsgType.MsgUpdateNamespace]: 'Update Namespace',
    [MsgType.MsgChannelOpenInit]: 'Channel Open Init',
    [MsgType.MsgCancelSpotOrder]: 'Cancel Spot Order',
    [MsgType.MsgRelayPythPrices]: 'Relay Pyth Prices',
    [MsgType.MsgExternalTransfer]: 'External Transfer',
    [MsgType.MsgExchangeUpdateParams]: 'Update Params',
    [MsgType.MsgActivateContract]: 'Activate Contract',
    [MsgType.MsgRegisterContract]: 'Register Contract',
    [MsgType.MsgRelayStorkPrices]: 'Relay Stork Prices',
    [MsgType.MsgUpdateSpotMarket]: 'Update Spot Market',
    [MsgType.MsgInsuranceUpdateParams]: 'Update Params',
    [MsgType.MsgSetDenomMetadata]: 'Set Denom Metadata',
    [MsgType.MsgLiquidatePosition]: 'Liquidate Position',
    [MsgType.MsgRequestRedemption]: 'Request Redemption',
    [MsgType.MsgTransferPayeeship]: 'Transfer Payeeship',
    [MsgType.MsgConnectionOpenAck]: 'Connection Open Ack',
    [MsgType.MsgConnectionOpenTry]: 'Connection Open Try',
    [MsgType.MsgBatchUpdateOrders]: 'Batch Update Orders',
    [MsgType.MsgPermissionsUpdateParams]: 'Update Params',
    [MsgType.MsgSubaccountTransfer]: 'Subaccount Transfer',
    [MsgType.MsgExecuteContractCompat]: 'Execute Contract',
    [MsgType.MsgTokenFactoryUpdateParams]: 'Update Params',
    [MsgType.MsgDeactivateContract]: 'Deactivate Contract',
    [MsgType.MsgChannelOpenConfirm]: 'Channel Open Confirm',
    [MsgType.MsgConnectionOpenInit]: 'Connection Open Init',
    [MsgType.MsgReclaimLockedFunds]: 'Reclaim Locked Funds',
    [MsgType.MsgERC20DeployedClaim]: 'Erc20 Deployed Claim',
    [MsgType.MsgValsetUpdatedClaim]: 'Valset Updated Claim',
    [MsgType.MsgActivateStakeGrant]: 'Activate Stake Grant',
    [MsgType.MsgInstantiateContract]: 'Instantiate Contract',
    [MsgType.MsgFundFeedRewardPool]: 'Fund Feed Reward Pool',
    [MsgType.MsgCreateInsuranceFund]: 'Create Insurance Fund',
    [MsgType.MsgRelayProviderPrices]: 'Relay Provider Prices',
    [MsgType.MsgInstantiateContract2]: 'Instantiate Contract2',
    [MsgType.MsgPrivilegedExecuteContract]: 'Execute Contract',
    [MsgType.MsgRelayPriceFeedPrice]: 'Relay Price Feed Price',
    [MsgType.MsgRequestBandIBCRates]: 'Request Band IBC Rates',
    [MsgType.MsgAuthorizeStakeGrants]: 'Authorize Stake Grants',
    [MsgType.MsgUpdateNamespaceRoles]: 'Update Namespace Roles',
    [MsgType.MsgRevokeNamespaceRoles]: 'Revoke Namespace Roles',
    [MsgType.MsgCreateSpotLimitOrder]: 'Create Spot Limit Order',
    [MsgType.MsgConnectionOpenConfirm]: 'Connection Open Confirm',
    [MsgType.MsgCancelDerivativeOrder]: 'Cancel Derivative Order',
    [MsgType.MsgEmergencySettleMarket]: 'Emergency Settle Market',
    [MsgType.MsgRelayCoinbaseMessages]: 'Relay Coinbase Messages',
    [MsgType.MsgBatchCancelSpotOrders]: 'Batch Cancel Spot Orders',
    [MsgType.MsgCreateSpotMarketOrder]: 'Create Spot Market Order',
    [MsgType.MsgSetWasmHook]: 'Update Namespace Msg Set Wasm Hook',
    [MsgType.MsgIncreasePositionMargin]: 'Increase Position Margin',
    [MsgType.MsgDecreasePositionMargin]: 'Decrease Position Margin',
    [MsgType.MsgUpdateDerivativeMarket]: 'Update Derivative Market',
    [MsgType.MsgWithdrawFeedRewardPool]: 'Withdraw Feed Reward Pool',
    [MsgType.MsgWithdrawDelegatorReward]: 'Withdraw Delegator Reward',
    [MsgType.MsgInstantSpotMarketLaunch]: 'Instant Spot Market Launch',
    [MsgType.MsgSetOrchestratorAddresses]: 'Set Orchestrator Addresses',
    [MsgType.MsgCancelBinaryOptionsOrder]: 'Cancel Binary Options Order',
    [MsgType.MsgSetMintsPaused]: 'Update Namespace Msg Set Mints Paused',
    [MsgType.MsgSetSendsPaused]: 'Update Namespace Msg Set Sends Paused',
    [MsgType.MsgSetBurnsPaused]: 'Update Namespace Msg Set Burns Paused',
    [MsgType.MsgCancelUnbondingDelegation]: 'Cancel Unbonding Delegation',
    [MsgType.MsgCreateDerivativeLimitOrder]: 'Create Derivative Limit Order',
    [MsgType.MsgBatchCreateSpotLimitOrders]: 'Batch Create Spot Limit Orders',
    [MsgType.MsgBatchCancelDerivativeOrders]: 'Batch Cancel Derivative Orders',
    [MsgType.MsgCreateDerivativeMarketOrder]: 'Create Derivative Market Order',

    [MsgType.MsgInstantPerpetualMarketLaunch]:
      'Instant Perpetual Market Launch',
    [MsgType.MsgCreateBinaryOptionsLimitOrder]:
      'Create Binary Options Limit Order',
    [MsgType.MsgBatchCancelBinaryOptionsOrders]:
      'Batch Cancel Binary Options Orders',
    [MsgType.MsgCreateBinaryOptionsMarketOrder]:
      'Create Binary Options Market Order',
    [MsgType.MsgAdminUpdateBinaryOptionsMarket]:
      'Admin Update Binary Options Market',
    [MsgType.MsgInstantExpiryFuturesMarketLaunch]:
      'Instant Expiry Futures Market Launch',
    [MsgType.MsgInstantBinaryOptionsMarketLaunch]:
      'Instant Binary Options Market Launch',
    [MsgType.MsgBatchCreateDerivativeLimitOrders]:
      'Batch Create Derivative Limit Orders',

    'cosmos.gov.v1.MsgVote': 'Vote',
    'cosmos.distribution.v1beta1.MsgFundCommunityPool': 'Fund Community Pool',
    'cosmos.distribution.v1beta1.MsgSetWithdrawAddress': 'Set Withdraw Address'
  }).map(([k, v]) => [
    k,
    /^[A-Z][a-z]+(?:[A-Z][a-z]+)+$/.test(v)
      ? breakCamelCase(v)
      : v.includes('.') && /^[A-Z]/.test(v.split('.').pop() || '')
        ? breakCamelCase(v.split('.').pop() || '')
        : breakCamelCase(v)
  ])
) as Record<string | MsgType, string>
